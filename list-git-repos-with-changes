#!/usr/bin/env bash

MODE=pretty

function help() {
  echo "This script finds and lists all Git repositories with unstaged or uncommitted changes."
  echo "By default, it also runs \`git status\` in those repositories to list the changes."
  echo
  echo "Usage:"
  echo "  list-git-repos-with-changes [OPTION]... [DIR]"
  echo
  echo "Options:"
  echo "  --list    only list the paths of repositories with changes, silencing other output"
  echo "  --help    show this help, then exit"
  exit 0
}

while [[ $# -gt 0 ]]; do
  ARG="$1"

  case $ARG in
    -l|--list)
      MODE=list
      ;;
    -h|--help)
      help
      exit
      ;;
    --)
      shift
      break
      ;;
    *)
      break
      ;;
  esac

  shift
done

DIR="$1"
if [ -z "$DIR" ]; then
  DIR="$(pwd)"
fi

function check_repo() {

  GIT_DIR="$1"
  REPO=$(dirname "$GIT_DIR")

  if [ "$MODE" == "pretty" ]; then
    echo
    echo -en "\033[1mChecking ${REPO}...\033[0m"
  fi

  CHANGES=1

  cd "$REPO"
  if ! git diff-files --quiet --ignore-submodules -- &>/dev/null; then
    if [ "$MODE" == "pretty" ]; then
      echo -e " \033[31munstaged changes\033[0m"
    elif [ "$MODE" == "list" ]; then
      echo "$REPO"
    fi
  elif ! git diff-index --cached --quiet HEAD --ignore-submodules -- &>/dev/null; then
    if [ "$MODE" == "pretty" ]; then
      echo -e " \033[31muncommitted changes\033[0m"
    elif [ "$MODE" == "list" ]; then
      echo "$REPO"
    fi
  else
    CHANGES=
    if [ "$MODE" == "pretty" ]; then
      echo -e " \033[32mno changes\033[0m"
    fi
  fi

  if [ -n "$CHANGES" ]; then
    if [ "$MODE" == "pretty" ]; then
      echo
      git status
    fi
  fi
}

export -f check_repo
export MODE="$MODE"

find "$DIR" -name .git -type d -exec bash -c 'check_repo "$0"' {} \;

if [ "$MODE" == "pretty" ]; then
  echo
fi
